buildscript {
    ext {
        kotlin_version = "1.4.21"
        kotlin_coroutines_version = "1.3.9"
        lifecycle_version = "2.2.0"
        okhttp_version = "4.9.0"
        play_services_location = "17.1.0"
        retrofit_version = "2.9.0"
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jacoco:org.jacoco.core:0.8.6"
    }
}

subprojects {
    repositories {
        google()
        jcenter()
    }

    apply plugin: 'com.android.library'
    apply plugin: 'kotlin-android'
    apply from: '../jacoco.gradle'

    android {
        compileSdkVersion 30
        buildToolsVersion "30.0.3"
        defaultConfig {
            minSdkVersion 21
            targetSdkVersion 30
            versionCode 1
            versionName "1.0"
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            consumerProguardFiles "consumer-rules.pro"

            buildConfigField "String", "PRE_PROD_CLIENT_ID", findApiKey("PRE_PROD_CLIENT_ID")
            buildConfigField "String", "PRE_PROD_CLIENT_SECRET", findApiKey("PRE_PROD_CLIENT_SECRET")
            buildConfigField "String", "PRE_PROD_REDIRECT_URI", findApiKey("PRE_PROD_REDIRECT_URI")
            buildConfigField "String", "PROD_CLIENT_ID", findApiKey("PROD_CLIENT_ID")
            buildConfigField "String", "PROD_CLIENT_SECRET", findApiKey("PROD_CLIENT_SECRET")
            buildConfigField "String", "PROD_REDIRECT_URI", findApiKey("PROD_REDIRECT_URI")
        }

        sourceSets {
            main {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java.srcDirs = ['src/main/java']
                res.srcDirs = ['src/main/res']
            }
        }

        buildTypes {
            debug {
                testCoverageEnabled true
            }
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        kotlinOptions {
            jvmTarget = '1.8'
        }
        testOptions {
            unitTests {
                includeAndroidResources = true
            }
        }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        implementation "com.google.android.gms:play-services-location:$play_services_location"

        // Kotlin coroutines
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

        // Unit tests
        testImplementation "junit:junit:4.13.1"
        testImplementation "org.robolectric:robolectric:4.4"
        testImplementation "org.mockito:mockito-core:2.19.0"
        testImplementation "androidx.test:core:1.3.0"
    }
}

static def findApiKey(String property){
    Properties properties = new Properties()
    properties.load(new FileInputStream("platform-secrets.properties"))
    return "\"" + properties.getProperty(property) +"\""
}

task clean(type: Delete) {
    delete rootProject.buildDir
}